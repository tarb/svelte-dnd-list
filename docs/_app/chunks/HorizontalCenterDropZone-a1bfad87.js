import{a as m}from"./DragDropList-d3b57ef2.js";class p{constructor(e,i,s,t){this.direction=m.Horizontal,this.id=e,this.priority=s,this.count=i,this.itemSize=t,this.items=new Array(i),this.el=void 0,this.ro=new ResizeObserver(this.onResize.bind(this)),this.containerClass="horizontal center"}scrollContainer(e,i){const{el:s}=this,t=s.getBoundingClientRect(),r=t.width/3;if(e>t.left&&e<t.left+r){const n=(e-t.left)/r*10;s.scrollLeft-=10-n}else if(e<t.right&&e>t.right-r){const n=(t.right-e)/r*10;s.scrollLeft+=10-n}}onResize(e){const i=e[0].contentRect.width;this.elWidth=i}placeholderStyleStr(){return`width: ${this.itemSize}px; height: 100%;`}pointIndex(e,i){const{el:s,itemSize:t,count:r}=this,n=s.getBoundingClientRect(),o=n.left-s.scrollLeft;n.top-s.scrollTop,e=e-o;const l=this.count*this.itemSize;let c=0;l<this.elWidth&&(c=Math.floor((this.elWidth-l)/2));const a=Math.floor((e-c)/t);return Math.min(Math.max(a,0),r)}dragYOffset(e,i){return this.el.getBoundingClientRect().top}dragXOffset(e,i){const s=this.el.getBoundingClientRect(),t=(i!=null?i:this.count)*this.itemSize;if(t<this.elWidth){const r=(this.elWidth-t)/2;return e*this.itemSize+r+s.left}return e*this.itemSize+s.left-this.el.scrollLeft}itemHeight(){return this.el.clientHeight}itemWidth(){return this.itemSize}styleSourceMove(e,i,s){const{items:t,itemSize:r}=this;for(let n=0;n<t.length;++n){const o=e>i&&(n<i||n>i&&n<=e)||e<i&&n<e||e==i&&n<i,l=e>i&&n>e||e<i&&(n>=e&&n<i||n>i)||e==i&&n>i,c=t[n];o?c&&(c.style.cssText=`transform: translateX(0px); transition: transform 0.2s cubic-bezier(0.2, 0, 0, 1); width: ${r}px;`):l&&(s?c&&(c.style.cssText=`transform: translateX(${r}px); transition: transform 0.2s cubic-bezier(0.2, 0, 0, 1); width: ${r}px;`):c&&(c.style.cssText=`transform: translateX(${r}px); width: ${r}px;`))}}styleSourceMissing(e){const{count:i,itemSize:s,items:t,elWidth:r}=this;if(i*s>r&&(i-1)*s<r){const n=Math.floor((r-(i-1)*s)/2)-1;for(let o=0;o<i;++o)t[o]&&o!==e&&(t[o].style.cssText=`transform: translateX(${n}px); transition: transform 0.2s cubic-bezier(0.2, 0, 0, 1); width: ${s}px;`)}else if((i-1)*s<r)for(let n=0;n<i;++n)t[n]&&n!==e&&(t[n].style.cssText=`transform: translateX(${s/2}px); transition: transform 0.2s cubic-bezier(0.2, 0, 0, 1); width: ${s}px;`);else for(let n=0;n<i;++n)t[n]&&n!==e&&(t[n].style.cssText=`transform: translateX(0px); transition: transform 0.2s cubic-bezier(0.2, 0, 0, 1); width: ${s}px;`)}styleDestMove(e){const{items:i,count:s,itemSize:t,elWidth:r,el:n}=this;if((i.length+1)*t>r&&(n.style.cssText=`transition: padding-bottom 0.2s cubic-bezier(0.2, 0, 0, 1); padding-right: ${t}px;`),s*t<r&&(s+1)*t>r){const o=r-s*t,l=Math.floor(o/2)-1,c=t-l;for(let a=0;a<s;++a){const h=i[a];a<e?h&&(h.style.cssText=`transform: translateX(-${l}px); transition: transform 0.2s cubic-bezier(0.2, 0, 0, 1); width: ${t}px;`):h&&(h.style.cssText=`transform: translateX(${c}px); transition: transform 0.2s cubic-bezier(0.2, 0, 0, 1); width: ${t}px;`)}}else if(s*t<r)for(let o=0;o<s;++o){const l=i[o];o<e?l&&(l.style.cssText=`transform: translateX(-${t/2}px); transition: transform 0.2s cubic-bezier(0.2, 0, 0, 1); width: ${t}px;`):l&&(l.style.cssText=`transform: translateX(${t/2}px); transition: transform 0.2s cubic-bezier(0.2, 0, 0, 1); width: ${t}px;`)}else for(let o=0;o<s;++o){const l=i[o];o<e?l&&(l.style.cssText=`transform: translateX(0px); transition: transform 0.2s cubic-bezier(0.2, 0, 0, 1); width: ${t}px;`):l&&(l.style.cssText=`transform: translateX(${t}px); transition: transform 0.2s cubic-bezier(0.2, 0, 0, 1); width: ${t}px;`)}}styleDestReset(){const{items:e,itemSize:i,el:s}=this;s.style.cssText="transition: padding-bottom 0.2s cubic-bezier(0.2, 0, 0, 1); padding-bottom: 0px;";for(let t=0;t<e.length;++t)e[t]&&(e[t].style.cssText=`transform:translateX(0px); transition:transform 0.2s cubic-bezier(0.2, 0, 0, 1); width: ${i}px;`)}styleRemove(){const{items:e,itemSize:i}=this;for(let s=0;s<e.length;++s){const t=e[s];t&&(t.style.cssText=`width: ${i}px;`)}}styleContainerBaseStyle(){this.ro.observe(this.el),this.elWidth=this.el.clientWidth,this.el.style.cssText="";const{items:e,itemSize:i}=this;for(let s=0;s<e.length;++s){const t=e[s];t&&(t.style.cssText=`width: ${i}px;`)}}}export{p as H};
