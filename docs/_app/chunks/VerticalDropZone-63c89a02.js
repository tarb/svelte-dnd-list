import{D as m}from"./DragDropList-bdb0fa0b.js";class g{constructor(e,t,s,i){this.direction=m.Vertical,this.id=e,this.priority=s,this.count=t,this.itemSize=i,this.items=new Array(t),this.el=void 0,this.containerClass="vertical"}insideBounding(e,t){const s=this.el;let i=0,r=0;for(let c=s;c;c=c.parentElement)r+=c.scrollLeft,i+=c.scrollTop;const n=s.getBoundingClientRect(),l=n.left+r,a=n.right+r,o=n.top+i,h=n.bottom+i;return t>o&&t<h&&e>l&&e<a}pointIndex(e,t){const{el:s,itemSize:i,count:r}=this,l=s.getBoundingClientRect().top-s.scrollTop+window.scrollY,a=Math.floor((t-l)/i);return Math.min(Math.max(a,0),r)}placeholderStyleStr(){return`height: ${this.itemSize}px; width: 100%;`}dragXOffset(e){return this.el.getBoundingClientRect().left}dragYOffset(e){const t=this.el.getBoundingClientRect();return e*this.itemSize+t.top}itemHeight(){return this.itemSize}itemWidth(){return this.el.clientWidth}styleSourceMove(e,t,s){const{items:i,itemSize:r}=this;for(let n=0;n<i.length;++n){const l=e>t&&(n<t||n>t&&n<=e)||e<t&&n<e||e==t&&n<t,a=e>t&&n>e||e<t&&(n>=e&&n<t||n>t)||e==t&&n>t,o=i[n];l?o&&(o.style.cssText=`transform: translateY(0px); transition: transform 0.2s cubic-bezier(0.2, 0, 0, 1); height: ${r}px;`):a&&(s?o&&(o.style.cssText=`transform: translateY(${r}px); transition: transform 0.2s cubic-bezier(0.2, 0, 0, 1); height: ${r}px;`):o&&(o.style.cssText=`transform: translateY(${r}px); height: ${r}px;`))}}styleSourceMissing(e){const{items:t,itemSize:s}=this;for(let i=0;i<t.length;++i)t[i]&&i!==e&&(t[i].style.cssText=`transform: translateY(0px); transition: transform 0.2s cubic-bezier(0.2, 0, 0, 1); height: ${s}px;`)}styleDestMove(e){const{items:t,itemSize:s}=this;for(let i=0;i<t.length;++i){const r=t[i];i<e?r&&(r.style.cssText=`transform: translateY(0px); transition: transform 0.2s cubic-bezier(0.2, 0, 0, 1); height: ${s}px;`):r&&(r.style.cssText=`transform: translateY(${s}px); transition: transform 0.2s cubic-bezier(0.2, 0, 0, 1); height: ${s}px;`)}}styleDestReset(){const{items:e,itemSize:t}=this;for(let s=0;s<e.length;++s)e[s]&&(e[s].style.cssText=`transform:translateY(0px); transition:transform 0.2s cubic-bezier(0.2, 0, 0, 1); height: ${t}px;`)}styleRemove(){this.styleContainerBaseStyle()}styleContainerBaseStyle(){const{items:e,itemSize:t}=this;for(let s=0;s<e.length;++s){const i=e[s];i&&(i.style.cssText=`height: ${t}px;`)}}}export{g as V};
